[tool.poetry]
name = "miscellaneous-python"
version = "0.2.0"
description = "A repo where I experiment and share my coding ideas, feel free to contribute to it"
license = "GPL-3.0-or-later"
authors = ["minhtrancccp <33189614+minhtrancccp@users.noreply.github.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.9,<3.11"

gmpy2 = [
    { python = "==3.9.*", url = "https://github.com/aleaxit/gmpy/releases/download/gmpy2-2.1.0rc1/gmpy2-2.1.0rc1-cp39-cp39-win_amd64.whl" },
    { python = "==3.10.*", url = "https://github.com/aleaxit/gmpy/releases/download/gmpy2-2.1.0rc1/gmpy2-2.1.0rc1-cp310-cp310-win_amd64.whl" },
]

beartype = { allow-prereleases = true, version = "^0.8.1" }
codetiming = { allow-prereleases = true, version = "^1.3.0" }
more-itertools = { allow-prereleases = true, version = "^8.8.0" }
prettytable = { allow-prereleases = true, version = "^2.1.0" }
regex = { allow-prereleases = true, version = "^2021.9.24" }
sympy = { allow-prereleases = true, version = "^1.8" }

[tool.poetry.group.dev.dependencies]
black = { allow-prereleases = true, extras = ["jupyter"], version = "^21.8b0" }
commitizen = { allow-prereleases = true, version = "^2.18.1" }
coverage = { allow-prereleases = true, extras = ["toml"], version = "^5.5" }
humanfriendly = { allow-prereleases = true, version = "^9.2" }
hypothesis = { allow-prereleases = true, extras = ["cli", "codemods"], version = "^6.21.6" }
identify = { allow-prereleases = true, version = "^2.2.13" }
isort = { allow-prereleases = true, version = "^5.9.3" }
jupyter = { allow-prereleases = true, version = "^1.0.0" }
nbqa = { allow-prereleases = true, version = "^1.1.0" }
numpy = { allow-prereleases = true, version = "^1.21.2" }
pre-commit = { allow-prereleases = true, version = "^2.15.0" }
pytest = { allow-prereleases = true, version = "^6.2.4" }
pytest-cov = { allow-prereleases = true, version = "^2.12.1" }
pytest-randomly = { allow-prereleases = true, version = "^3.10.1" }
radon = { allow-prereleases = true, version = "^5.1.0" }

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.pytest.ini_options]
addopts = "-v --no-header --cov=miscellaneous_python --durations=0"
filterwarnings = ["ignore::DeprecationWarning"]

[tool.coverage.report]
precision = 2
show_missing = true
sort = "-cover"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
